[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"DARAteam. Maintainer, author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"DARAteam (2024). testingGITHUB: Create Beautiful Packages DARA. R package version 0.0.0.9000.","code":"@Manual{,   title = {testingGITHUB: Create Beautiful Packages With DARA},   author = {{DARAteam}},   year = {2024},   note = {R package version 0.0.0.9000}, }"},{"path":[]},{"path":[]},{"path":"/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Create Beautiful Packages With DARA","text":"DARAtest R package provides comprehensive suite statistical tests tools analyzing data sets, making easier users perform accurate efficient data analysis.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Beautiful Packages With DARA","text":"Check wiki page daratools installation update instructions.","code":""},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Create Beautiful Packages With DARA","text":"Use examples liberally, show expected output can. ’s helpful smallest example usage can demonstrate inline, providing links sophisticated examples long reasonably include README.","code":""},{"path":"/index.html","id":"support","dir":"","previous_headings":"","what":"Support","title":"Create Beautiful Packages With DARA","text":"First point contact questions: DARAteam (dara-team-list@rivm.nl)","code":""},{"path":"/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"Create Beautiful Packages With DARA","text":"ideas releases future, good idea list README.","code":""},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Create Beautiful Packages With DARA","text":"State open contributions requirements accepting .","code":""},{"path":"/index.html","id":"instructions-for-developers","dir":"","previous_headings":"","what":"Instructions for developers","title":"Create Beautiful Packages With DARA","text":"Check wiki page r packages elaborate information R package development. describe important guidelines practicalities.","code":""},{"path":"/index.html","id":"requirements","dir":"","previous_headings":"Instructions for developers","what":"Requirements","title":"Create Beautiful Packages With DARA","text":"use testthat, lintr roxygen2 package development tests, code style checks automatic documentation. also use devtools usethis package development adhere standards R packages make developing easier! Install Rstudio environment:","code":"install.packages(testthat) install.packages(lintr) install.packages(roxygen2) install.packages(knitr) install.packages(rmarkdown) install.packages(pkgdown) install.packages(devtools) install.packages(usethis)"},{"path":"/index.html","id":"guidelines","dir":"","previous_headings":"Instructions for developers","what":"Guidelines","title":"Create Beautiful Packages With DARA","text":"Type devtools::load_all() console time start developing. loads dependencies non-exported functions NAMESPACE. makes developing lot easier! ensure code standardization quality, follow guidelines: - Add tests usethis::use_test() - Add new package dependency DESCRIPTION file usethis::use_package(). use min_version argument specify minimum version. - Add new function dependency NAMESPACE usethis::use_import_from() - Add documentation new functions inserting roxygen skeleton use devtools::document() create automatic documentation man folder, information check wiki section","code":""},{"path":"/index.html","id":"authors-and-acknowledgment","dir":"","previous_headings":"","what":"Authors and acknowledgment","title":"Create Beautiful Packages With DARA","text":"R packages created DARAteam (dara-team-list@rivm.nl).","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Create Beautiful Packages With DARA","text":"open source projects, indicate licensed.","code":""},{"path":"/reference/nrow_no_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of non missing (NA) values in specified column in dataframe — nrow_no_na","title":"Number of non missing (NA) values in specified column in dataframe — nrow_no_na","text":"Number non missing (NA) values specified column dataframe","code":""},{"path":"/reference/nrow_no_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of non missing (NA) values in specified column in dataframe — nrow_no_na","text":"","code":"nrow_no_na(df, colname)"},{"path":"/reference/nrow_no_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of non missing (NA) values in specified column in dataframe — nrow_no_na","text":"df Dataframe. colname String. Column name filter non-NA values.","code":""},{"path":"/reference/nrow_no_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of non missing (NA) values in specified column in dataframe — nrow_no_na","text":"Integer. Number rows df filtered non-NA values column colname.","code":""},{"path":"/reference/nrow_no_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of non missing (NA) values in specified column in dataframe — nrow_no_na","text":"","code":"df <- data.frame( fruit = c(\"apple\", \"banana\", \"strawberry\", \"pineapple\"), sugar = c(30, 50, 4, NA) ) nrow_no_na(df, \"sugar\") #> [1] 3"},{"path":"/news/index.html","id":"testinggithub-development-version","dir":"Changelog","previous_headings":"","what":"testingGITHUB (development version)","title":"testingGITHUB (development version)","text":"List changes chronological order (new -> old ) package . release, write release notes /blogpost package mailing list /pkg website. NEWS.md file visible pkg website News > Changelog. chosen include headers “Added”, “Changed”, “Fixed”, “Deprecated”. free change . GitLab issue numbers mentioned applicable.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]}]
